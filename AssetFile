$: << 'lib'

require 'travis/assets'
require 'compass'
require 'rake-pipeline-web-filters'
require 'rake-pipeline-web-filters/helpers'

root    = Travis::Assets.root
version = Travis::Assets.version = project.digested_tmpdir.split('-').last[0..7]
puts "Assets version: #{version}"

Compass.add_configuration({:project_path => root.to_s}, 'implied')

Travis::Assets.clear
Travis::Assets::I18n.export # turn this shit into a filter


Filters = Rake::Pipeline::Web::Filters

register :erb,    Travis::Assets::Filters::Tilt
register :hjs,    Travis::Assets::Filters::Handlebars
register :coffee, Filters::CoffeeScriptFilter
register :scss,   Filters::SassFilter

tmpdir root.join('tmp')
output root.join('public')


paths = Travis::Assets.paths(root.join('assets/javascripts'))

input root.join('assets/javascripts'), "{#{paths.join(',')}}" do
  match '*' do
    paths.map! { |path| path.gsub(/.hjs|.coffee/, '') }
    concat paths, "#{version}/javascripts/application.js"
  end
end

input root.join('assets/javascripts'), 'jasmine/**/*.js' do
  concat "#{version}/javascripts/jasmine.js"
end

input root.join('assets/stylesheets'), 'application.css*' do
  concat "#{version}/stylesheets/application.css"
end

input root.join('assets/stylesheets'), 'mobile.css*' do
  concat "#{version}/stylesheets/mobile.css"
end

input root.join('assets/stylesheets'), 'jasmine.css*' do
  concat "#{version}/stylesheets/jasmine.css"
end


# how to use the copy filter with binary data?
# input 'assets/images' do
#   copy "#{version}/images"
# end

require 'fileutils'

source = root.join('assets')
target = root.join("public/#{version}")

`mkdir -p #{target}`
`cp -r #{source.join('images')} #{target}`
# `cp -r #{source.join('static')}/* #{target}`
