$: << 'lib'

require 'travis/assets'
require 'compass'
require 'rake-pipeline-web-filters'
require 'rake-pipeline-web-filters/helpers'

Travis::Assets.update_version

root = project.root
version = Travis::Assets.version
# puts "Assets version: #{version}"

Compass.add_configuration({:project_path => root.to_s}, 'implied')

register :erb,    Travis::Assets::Filters::Tilt
register :hjs,    Travis::Assets::Filters::Handlebars
register :coffee, Rake::Pipeline::Web::Filters::CoffeeScriptFilter
register :scss,   Rake::Pipeline::Web::Filters::SassFilter

tmpdir 'tmp'
output "public/#{version}"


paths = Travis::Assets.paths('javascripts')

input 'assets/javascripts', "{#{paths.join(',')}}" do
  paths.map! { |path| path.gsub(/.hjs|.coffee/, '') }
  concat paths, 'javascripts/application.js'
end

input 'assets/javascripts', 'jasmine/**/*.js' do
  concat 'javascripts/jasmine.js'
end

input 'assets/stylesheets', 'application.css*' do
  concat 'stylesheets/application.css'
end

input 'assets/stylesheets', 'mobile.css*' do
  concat 'stylesheets/mobile.css'
end

input 'assets/stylesheets', 'jasmine.css*' do
  concat 'stylesheets/jasmine.css'
end


# # how to use the copy filter with binary data?
# # input 'assets/images' do
# #   copy "#{version}/images"
# # end
#
# require 'fileutils'
#
# source = root.join('assets')
# target = root.join("public/#{version}")
#
# `mkdir -p #{target}`
# `cp -r #{source.join('images')} #{target}`
# # `cp -r #{source.join('static')}/* #{target}`
